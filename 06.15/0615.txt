<학습목표>
1. 어제 배운거 복습
jdk, jre, jvm
JDK : Java Development Kit
JRE : Java Runtime Environment
JVM : Java Virtual Machine

1.8=8   11


dynamic typed 인터프리터
컴파일 = Compile = 코드를 기계어(이진코드. 0과1로)로 바꾸는 것.
	컴파일러. javac
	.java파일을 javac가 컴파일하면 .class파일로 변환된다.
	.class파일이 JVM의 클래스로더에게 전달되고 JVM은 메모리에 올린다.
	프로세스가 실행된다.
프로그램 vs 프로세스
	프로그램이 실행되면 프로세스
	실행됐다는것은 메모리에 올라갔다는 말.
변수
	1. 값을 반복해서 사용할때 코딩의 반복을 막기위해서
	2. 값의 이름을 정해주기 위해서
	자바에서 변수 선언하는법
		데이터타입 변수명 = 값;
		int a = 5;
데이터타입
	- primitive(기본형)
		call by value
		8개. boolean
			char
			byte, int, short, long
			float, double
	- object(객체. 참조형)
		call by reference
		//스트링은 원시형 데이터타입이 아님에 유의.
		String a = "안녕하세요";
		a = "헬로월드";
		a의 주소값은 그대로고 값이 바뀌는게 아니라
		주소가 바뀌게 된다. 원시형 데이터타입이 아니기 때문에.
함수
	- 특정 프로세스를 반복하여 사용할때 유지보수가 편하게 위해서
	- 이 프로세스가 무엇을 하는건지 명확하게 이름을 지어 코드작성과 읽기를 편하게 하기위해
	- 자바에서 함수정의하는법
		접근제한자 리턴타입 함수명(데이터타입 이름){ 본문 };
		예) public int sum(int a, int b){ return a+b;}
	- 함수 호출하는 법
		함수명(매개변수들);
		
디버거
	- 목적 : 코드를 컴퓨터가 실행하는 과정 각 단계별로 추적하여 버그를 고치는것을 쉽게 도와줌
	- 자바스크립트에서 쓰는법 : 멈출 코드의 앞에 debugger;를 적고 디버거 모드로 실행.(개발자모드)
	- 자바에서쓰는법 : 멈출 코드의 앞에 브레이크포인트를 걸고 디버거 모드로 실행.(bebug as)
nodejs
	- 자바스크립트를 브라우저 외의 환경에서 실행할수 있게 해주는 런타임 환경

-일단 이클립스(STS)는 JDK를 통해서 컴파일 하지 않습니다. 기본적으로 내장된 컴파일러를 사용한다. 
바꾸고싶으면 Window > Preferences > Java > Compiler 여기서

그런데 런타인 환경은 사용자가 설치한 (그리고 설정한)것을 사용한다.
바꾸고싶으면 Window > Preferences > installed jre

- 언제 while을 쓰고 언제 for를 씁니까?
조건이 '상황, 컨디션'으로 정해지면  while이 편하고
조건이 '횟수'로 정해지면 for가 편하다.
하지만 for와 while은 서로 변환할수있다.


- 2교시
좋은설계는 높은 응집도, 낮은 결합도.

전화번호는 국제적으로 어떻게 한사람이 하나의 번호를 부여받고
통신사는 어떻게 그것을 관리하고
4g, 5g는 무엇이고 우리가 전화번호로 통화 버튼을 누르면
어떤 정보가 어디로 가서 
어떻게 처리되어 통화 작업이 일어나는지
음성은 어떻게 데이터화되어 전달되고

class는 객체에 대한 설계도
설계도 대로 인스턴스를 하나 만들면 그제서야 메모리에 올라간다.

Overload : 오버로드. 이것도 싣고 저것도 싣고.
함수의 이름이 같은데 파라미터가 다를경우
서로 다른 함수같이 작동되는 매커니즘.
호출할때의 데이터타입과 갯수를 보고 그렇게 정의했던 함수가 매칭되어 호출된다.

프로그래밍 패러다임
절차지향적
객체지향적
	장점 : 사람이 세상을 보는 것과 같은 방식
	단점 : 간단한거 하나를 만들려고해도 설계부터 해야된다.
함수지향적


- 생성자가 무엇인지 설명하고 왜 쓰는지 설명해보세요.
=> 객체를 생성할때 쓴다.
객체가 생성될때 필요한 데이터를 강제하는 역할을 한다.
=> 필요한 데이터가 준비되었다면 쉽게 객체를 만들수있도록 한다.
=> 필요한 데이터가 아직 준비되지 않았다면 객체를 생성할 수 없도록 한다.

- 3시
우리 아빠의 그랜저 : 인스턴스
그랜저라는 개념 : 객체
현대자동차의 그랜저 설계도 : 클래스
중국으로 일부 유출된 그랜저 설계도 : 추상클래스


int a = 5;
Man hong = new Man("홍길동");
데이터타입 변수명 = 값;

오버로딩 = 과적재 = 이거 싣었다가 저거 싣었다가
	함수의 이름이 같고 파라미터가 다른 여러함수를 정의해놨을때 
	함수호출시의 파라미터에 맞춰서 그에 맞는 함수가 호출되는거.
상속, 
오버라이드 = 오버라이트 = 덮어쓰기
	//상속이라는 개념을 먼저 알아야된다. 부모클래스와 extends
	override = 부모에 있는 메소드의 형태와 같은 메소드를 자식에 선언했을때
			자식의 메소드가 부모의 메소드를 덮어쓰는 매커니즘

추상클래스, 
	abstract 키워드가 붙은 메소드가 하나라도 있는 클래스
	사실은 구현하다가 만놈(완벽하게 개발을 끝내지 못한놈)인데 
	내가 만든 클래스를 다른 사람이 상속받게 되면 미완성된것을 사용하게된다.
	추상클래스로는 인스턴스를 만들수 없다. 왜냐? 미완성된놈이니까.
	자식에서 반드시 추상매소드를 오버라이드 해줘야 한다.